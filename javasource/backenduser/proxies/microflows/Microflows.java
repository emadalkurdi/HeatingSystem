// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package backenduser.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	/**
	 * @deprecated
	 * The default constructor of the Microflows class should not be used.
	 * Use the static microflow invocation methods instead.
	 */
	@java.lang.Deprecated(since = "9.12", forRemoval = true)
	public Microflows() {}

	// These are the microflows for the BackendUser module
	public static void aCT_AddNewWorkOrder(IContext context, customer.proxies.ServiceRequest _serviceRequest)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
		Core.microflowCall("BackendUser.ACT_AddNewWorkOrder").withParams(params).execute(context);
	}
	public static void aCT_AssignRequestToTechnician(IContext context, customer.proxies.ServiceRequest _serviceRequest)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
		Core.microflowCall("BackendUser.ACT_AssignRequestToTechnician").withParams(params).execute(context);
	}
	public static void aCT_MarkRequestAsCompleted(IContext context, customer.proxies.ServiceRequest _serviceRequest)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
		Core.microflowCall("BackendUser.ACT_MarkRequestAsCompleted").withParams(params).execute(context);
	}
	public static void aCT_SaveRequestDetails(IContext context, customer.proxies.ServiceRequest _serviceRequest)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
		Core.microflowCall("BackendUser.ACT_SaveRequestDetails").withParams(params).execute(context);
	}
	public static void aCT_SaveWorkOrderDetails(IContext context, backenduser.proxies.WorkOrder _workOrder, customer.proxies.ServiceRequest _serviceRequest)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkOrder", _workOrder == null ? null : _workOrder.getMendixObject());
		params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
		Core.microflowCall("BackendUser.ACT_SaveWorkOrderDetails").withParams(params).execute(context);
	}
	public static void aCT_ShowAssignPage(IContext context, customer.proxies.ServiceRequest _serviceRequest)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
		Core.microflowCall("BackendUser.ACT_ShowAssignPage").withParams(params).execute(context);
	}
	public static void aCT_UploadDocument(IContext context, backenduser.proxies.Document _document)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Document", _document == null ? null : _document.getMendixObject());
		Core.microflowCall("BackendUser.ACT_UploadDocument").withParams(params).execute(context);
	}
	public static administration.proxies.Account dS_GetBackendAccount(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("BackendUser.DS_GetBackendAccount").withParams(params).execute(context);
		return result == null ? null : administration.proxies.Account.initialize(context, result);
	}
	public static java.util.List<administration.proxies.Account> dS_GetTechnicianUsers(IContext context, customer.proxies.ServiceRequest _serviceRequest)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("BackendUser.DS_GetTechnicianUsers").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> administration.proxies.Account.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static boolean vAL_WorkOrderDetails(IContext context, backenduser.proxies.WorkOrder _workOrder)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkOrder", _workOrder == null ? null : _workOrder.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("BackendUser.VAL_WorkOrderDetails").withParams(params).execute(context);
	}
}
