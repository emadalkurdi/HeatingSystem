// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package customer.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	/**
	 * @deprecated
	 * The default constructor of the Microflows class should not be used.
	 * Use the static microflow invocation methods instead.
	 */
	@java.lang.Deprecated(since = "9.12", forRemoval = true)
	public Microflows() {}

	// These are the microflows for the Customer module
	public static void aCT_AutoFillAddressInfoFromProfile(IContext context, customer.proxies.ServiceRequest _serviceRequest)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
		Core.microflowCall("Customer.ACT_AutoFillAddressInfoFromProfile").withParams(params).execute(context);
	}
	public static void aCT_AutoFillContactInfoFromProfile(IContext context, customer.proxies.ServiceRequest _serviceRequest)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
		Core.microflowCall("Customer.ACT_AutoFillContactInfoFromProfile").withParams(params).execute(context);
	}
	public static void aCT_CancelEquipment(IContext context, customer.proxies.Equipment _equipment)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Equipment", _equipment == null ? null : _equipment.getMendixObject());
		Core.microflowCall("Customer.ACT_CancelEquipment").withParams(params).execute(context);
	}
	public static void aCT_CancelServiceRequest(IContext context, customer.proxies.ServiceRequest _serviceRequest)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
		Core.microflowCall("Customer.ACT_CancelServiceRequest").withParams(params).execute(context);
	}
	public static void aCT_SubmitServiceRequest(IContext context, customer.proxies.ServiceRequest _serviceRequest)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
		Core.microflowCall("Customer.ACT_SubmitServiceRequest").withParams(params).execute(context);
	}
	public static void aCT_ViewWorkOrder(IContext context, customer.proxies.ServiceRequest _serviceRequest)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
		Core.microflowCall("Customer.ACT_ViewWorkOrder").withParams(params).execute(context);
	}
	public static customer.proxies.Customer dS_GetCustomerAccount(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Customer.DS_GetCustomerAccount").withParams(params).execute(context);
		return result == null ? null : customer.proxies.Customer.initialize(context, result);
	}
	public static customer.proxies.WeatherStatus dS_GetWeatherStatus(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Customer.DS_GetWeatherStatus").withParams(params).execute(context);
		return result == null ? null : customer.proxies.WeatherStatus.initialize(context, result);
	}
	public static void sCE_UpdateWeatherStatus(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Customer.SCE_UpdateWeatherStatus").withParams(params).execute(context);
	}
	public static administration.proxies.Account sUB_GetCurrentUserAccount(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Customer.SUB_GetCurrentUserAccount").withParams(params).execute(context);
		return result == null ? null : administration.proxies.Account.initialize(context, result);
	}
	public static boolean vAL_ValidateServiceRequestDetails(IContext context, customer.proxies.ServiceRequest _serviceRequest)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ServiceRequest", _serviceRequest == null ? null : _serviceRequest.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("Customer.VAL_ValidateServiceRequestDetails").withParams(params).execute(context);
	}
}
