// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package userregistration.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	/**
	 * @deprecated
	 * The default constructor of the Microflows class should not be used.
	 * Use the static microflow invocation methods instead.
	 */
	@java.lang.Deprecated(since = "9.12", forRemoval = true)
	public Microflows() {}

	// These are the microflows for the UserRegistration module
	public static void aCT_CancelRegistrationRequest(IContext context, customer.proxies.Customer _customer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Customer", _customer == null ? null : _customer.getMendixObject());
		Core.microflowCall("UserRegistration.ACT_CancelRegistrationRequest").withParams(params).execute(context);
	}
	public static void aCT_ShowRegistrationPage(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("UserRegistration.ACT_ShowRegistrationPage").withParams(params).execute(context);
	}
	public static void aCT_SubmitRegistrationRequest(IContext context, customer.proxies.Customer _customer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Customer", _customer == null ? null : _customer.getMendixObject());
		Core.microflowCall("UserRegistration.ACT_SubmitRegistrationRequest").withParams(params).execute(context);
	}
	public static administration.proxies.AccountPasswordData dS_CreateUserPassword(IContext context, administration.proxies.Account _account)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Account", _account == null ? null : _account.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("UserRegistration.DS_CreateUserPassword").withParams(params).execute(context);
		return result == null ? null : administration.proxies.AccountPasswordData.initialize(context, result);
	}
	public static administration.proxies.AccountPasswordData sub_GetUserPassword(IContext context, administration.proxies.Account _account)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Account", _account == null ? null : _account.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("UserRegistration.Sub_GetUserPassword").withParams(params).execute(context);
		return result == null ? null : administration.proxies.AccountPasswordData.initialize(context, result);
	}
	public static boolean vAL_ValidateRegistrationRequestDetails(IContext context, customer.proxies.Customer _customer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Customer", _customer == null ? null : _customer.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("UserRegistration.VAL_ValidateRegistrationRequestDetails").withParams(params).execute(context);
	}
}
